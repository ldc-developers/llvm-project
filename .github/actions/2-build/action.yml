name: Build & install LLVM incl. LLD, compiler-rt, MLIR, BOLT
inputs:
  arch:
    required: false # Windows only
  enable_projects:
    required: true
  targets_to_build:
    required: false
    default: all
  experimental_targets_to_build:
    required: false
    default: ''
  with_asserts:
    required: true
  extra_cmake_flags:
    required: false
    default: ''
runs:
  using: composite
  steps:

    - if: runner.os != 'Windows'
      shell: bash
      run: |
        set -eux
        cd ..
        cmake --version
        ninja --version
        mkdir build
        cd build
        cmake -G Ninja ../llvm-project/llvm \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=$PWD/../install \
          -DLLVM_ENABLE_PROJECTS="${{ inputs.enable_projects }}" \
          -DLLVM_TARGETS_TO_BUILD="${{ inputs.targets_to_build }}" \
          -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD="${{ inputs.experimental_targets_to_build }}" \
          -DLLVM_ENABLE_ASSERTIONS=${{ inputs.with_asserts == 'true' && 'ON' || 'OFF' }} \
          ${{ inputs.extra_cmake_flags }}
        ninja install

    # Windows: invoke CMake & ninja in MSVC env
    - if: runner.os == 'Windows'
      shell: cmd
      run: |
        call "%LDC_VSDIR%\Common7\Tools\VsDevCmd.bat" -arch=${{ inputs.arch }} || exit /b
        echo on
        cd .. || exit /b
        cmake --version || exit /b
        ninja --version || exit /b
        mkdir build || exit /b
        cd build || exit /b
        cmake -G Ninja ..\llvm-project\llvm ^
          -DCMAKE_BUILD_TYPE=Release ^
          "-DCMAKE_INSTALL_PREFIX=%CD%\..\install" ^
          "-DLLVM_ENABLE_PROJECTS=${{ inputs.enable_projects }}" ^
          "-DLLVM_TARGETS_TO_BUILD=${{ inputs.targets_to_build }}" ^
          "-DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=${{ inputs.experimental_targets_to_build }}" ^
          -DLLVM_ENABLE_ASSERTIONS=${{ inputs.with_asserts == 'true' && 'ON' || 'OFF' }} ^
          ${{ inputs.extra_cmake_flags }}
        if %errorlevel% neq 0 exit /b %errorlevel%

        ninja install || exit /b
